#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
生成测试订单数据的脚本
"""

import pandas as pd
from datetime import datetime, timedelta
import random
import os

def generate_test_orders():
    """生成测试订单数据"""
    
    # 确保orders文件夹存在
    if not os.path.exists('orders'):
        os.makedirs('orders')
    
    # 创建测试订单数据
    test_orders = [
        {
            '订单号': 'ORDER001',
            '状态': 2,
            '用户名': '张先生',
            '手机号': '13800138001',
            '地址': '北京市朝阳区建国路88号',
            '金额': 25.00,
            '备注': '少糖',
            '下单时间': '2024-01-15 10:30:00',
            '菜品': '美式咖啡,拿铁咖啡'
        },
        {
            '订单号': 'ORDER002',
            '状态': 5,
            '用户名': '李女士',
            '手机号': '13800138002',
            '地址': '上海市浦东新区陆家嘴1号',
            '金额': 32.00,
            '备注': '多奶',
            '下单时间': '2024-01-15 11:15:00',
            '菜品': '卡布奇诺,提拉米苏'
        },
        {
            '订单号': 'ORDER003',
            '状态': 2,
            '用户名': '王先生',
            '手机号': '13800138003',
            '地址': '广州市天河区珠江新城2号',
            '金额': 18.50,
            '备注': '不要冰块',
            '下单时间': '2024-01-15 12:00:00',
            '菜品': '美式咖啡'
        },
        {
            '订单号': 'ORDER004',
            '状态': 6,
            '用户名': '赵女士',
            '手机号': '13800138004',
            '地址': '深圳市南山区科技园3号',
            '金额': 45.00,
            '备注': '快点送',
            '下单时间': '2024-01-15 12:30:00',
            '菜品': '焦糖玛奇朵,芝士蛋糕,蓝莓松饼'
        },
        {
            '订单号': 'ORDER005',
            '状态': 5,
            '用户名': '钱先生',
            '手机号': '13800138005',
            '地址': '杭州市西湖区文三路4号',
            '金额': 28.00,
            '备注': '热饮',
            '下单时间': '2024-01-15 13:00:00',
            '菜品': '榛果拿铁,牛角包'
        },
        {
            '订单号': 'ORDER006',
            '状态': 2,
            '用户名': '孙女士',
            '手机号': '13800138006',
            '地址': '成都市锦江区春熙路5号',
            '金额': 36.50,
            '备注': '加奶泡',
            '下单时间': '2024-01-15 13:45:00',
            '菜品': '香草拿铁,巧克力蛋糕'
        },
        {
            '订单号': 'ORDER007',
            '状态': 5,
            '用户名': '周先生',
            '手机号': '13800138007',
            '地址': '武汉市江汉区解放大道6号',
            '金额': 22.00,
            '备注': '',
            '下单时间': '2024-01-15 14:20:00',
            '菜品': '红茶拿铁'
        },
        {
            '订单号': 'ORDER008',
            '状态': 2,
            '用户名': '吴女士',
            '手机号': '13800138008',
            '地址': '南京市鼓楼区中山路7号',
            '金额': 40.00,
            '备注': '不要奶泡',
            '下单时间': '2024-01-15 15:00:00',
            '菜品': '抹茶拿铁,三明治'
        },
        {
            '订单号': 'ORDER009',
            '状态': 2,
            '用户名': '陈先生',
            '手机号': '13800138009',
            '地址': '西安市雁塔区高新路8号',
            '金额': 55.00,
            '备注': '冰饮',
            '下单时间': '2024-01-15 15:30:00',
            '菜品': '摩卡咖啡,提拉米苏,牛角包'
        },
        {
            '订单号': 'ORDER010',
            '状态': 5,
            '用户名': '刘女士',
            '手机号': '13800138010',
            '地址': '重庆市渝中区解放碑9号',
            '金额': 19.00,
            '备注': '少糖多奶',
            '下单时间': '2024-01-15 16:00:00',
            '菜品': '热巧克力'
        }
    ]
    
    # 创建DataFrame
    df = pd.DataFrame(test_orders)
    
    # 保存为Excel文件
    output_file = 'orders/test_orders.xlsx'
    df.to_excel(output_file, index=False)
    
    print("=" * 50)
    print("✅ 测试订单数据生成成功！")
    print("=" * 50)
    print(f"📁 文件位置: {output_file}")
    print(f"📊 订单数量: {len(test_orders)} 个")
    print("\n📈 订单状态分布:")
    status_counts = df['状态'].value_counts()
    for status, count in status_counts.items():
        status_name = {2: '待接单', 5: '已完成', 6: '已取消'}[status]
        print(f"   {status_name}({status}): {count} 个")
    
    print(f"\n💰 总金额: ¥{df['金额'].sum():.2f}")
    print(f"📅 时间范围: {df['下单时间'].min()} 至 {df['下单时间'].max()}")
    print("\n🎯 测试说明:")
    print("   - 系统会自动读取 orders 文件夹中的 Excel 文件")
    print("   - 每分钟自动刷新一次数据")
    print("   - 可以通过界面进行接单、拒单、取消等操作")
    print("=" * 50)

if __name__ == '__main__':
    generate_test_orders() 